{
	"info": {
		"_postman_id": "172156c8-2b4e-4220-b8da-138366b2e2b8",
		"name": "Assignment on Postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33809006"
	},
	"item": [
		{
			"name": "Admin",
			"item": [
				{
					"name": "Login Admin",
					"item": [
						{
							"name": "Login Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData= pm.response.json();\r",
											"let token= jsonData.token;\r",
											"pm.environment.set(\"token\", token)\r",
											"\r",
											"pm.test(\"Check if login is successful\",()=>{\r",
											"    pm.expect(jsonData.message).includes(\"Login successful\")\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\":\"admin@roadtocareer.net\",\r\n    \"password\":\"1234\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Unsuccessful login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"If user inputs wrong creds, should not successfully logged in\", function() {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).includes(\"Password incorrect\")\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\":\"admin@roadtocareer.net\",\r\n    \"password\":\"12345\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Signup",
					"item": [
						{
							"name": "Create Agent",
							"item": [
								{
									"name": "Create Agent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = pm.response.json();\r",
													"\r",
													"if (jsonData && jsonData.user) {\r",
													"\r",
													"    let userId = jsonData.user.id;\r",
													"    let userPhone_number = jsonData.user.phone_number;\r",
													"    let userEmail = jsonData.user.email;\r",
													"\r",
													"    pm.collectionVariables.set(\"Col_Agent_userId\", userId);\r",
													"    pm.collectionVariables.set(\"Col_Agent_phoneNumber\", userPhone_number);\r",
													"    pm.collectionVariables.set(\"Col_Agent_Email\", userEmail);\r",
													"\r",
													"\r",
													"    // pm.environment.set(\"Env_Agent_phoneNumber\", userPhone_number);\r",
													"    pm.environment.set(\"userId\", userId);\r",
													"}\r",
													"pm.test(\"Check new user is created\", function () {\r",
													"    pm.expect(jsonData.message).includes(\"User created\");\r",
													"});\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"let randomId=_.random(100000,999999)\r",
													"let prefix=\"01301\";\r",
													"let phoneNumber=prefix+randomId;\r",
													"console.log(phoneNumber);\r",
													"\r",
													"pm.collectionVariables.set(\"Col_Agent_phoneNumber\",phoneNumber)\r",
													"// pm.environment.set(\"Env_Agent_phoneNumber\",phoneNumber)\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "X-AUTH-SECRET-KEY",
												"value": "ROADTOSDET",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"1234\",\r\n  \"phone_number\": \"{{Col_Agent_phoneNumber}}\",\r\n  \"nid\": \"123456789\",\r\n  \"role\": \"Agent\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Duplicate Agent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Check if same user can signup multiple times\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"User already exists\");\r",
													"});\r",
													"pm.test(\"Status code is 208\", function () {\r",
													"    pm.response.to.have.status(208);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "X-AUTH-SECRET-KEY",
												"value": "ROADTOSDET",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\r\n        \"id\": 12005,\r\n        \"name\": \"Jacquelyn Weimann\",\r\n        \"email\": \"Sean81@gmail.com\",\r\n        \"password\": \"1234\",\r\n        \"phone_number\": \"01301341071\",\r\n        \"nid\": \"123456789\",\r\n        \"role\": \"Agent\",\r\n        \"updatedAt\": \"2024-09-07T07:31:10.282Z\",\r\n        \"createdAt\": \"2024-09-07T07:31:10.282Z\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"create"
											]
										}
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{token}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"packages": {},
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"packages": {},
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Create Customers",
							"item": [
								{
									"name": "Create Customer-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = pm.response.json();\r",
													"\r",
													"if (jsonData && jsonData.user) {\r",
													"\r",
													"    let userId = jsonData.user.id;\r",
													"    let userPhone_number = jsonData.user.phone_number;\r",
													"\r",
													"    pm.collectionVariables.set(\"Cus-1_userId\", userId);\r",
													"    pm.collectionVariables.set(\"Cus-1_phoneNumber\", userPhone_number);\r",
													"\r",
													"    //pm.environment.set(\"phoneNumber\", userPhone_number);\r",
													"    //pm.environment.set(\"userId\", userId);\r",
													"\r",
													"}\r",
													"\r",
													"pm.test(\"Check new user is created\", function () {\r",
													"    pm.expect(jsonData.message).includes(\"User created\");\r",
													"});\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"let randomId=_.random(100000,999999)\r",
													"let prefix=\"01301\";\r",
													"let phoneNumber=prefix+randomId;\r",
													"console.log(phoneNumber);\r",
													"\r",
													"pm.collectionVariables.set(\"Cus-1_phoneNumber\",phoneNumber);\r",
													"//pm.environment.set(\"phoneNumber\",phoneNumber);\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Secret-Key",
												"value": "{{partnerkey}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"1234\",\r\n  \"phone_number\": \"{{Cus-1_phoneNumber}}\",\r\n  \"nid\": \"123456789\",\r\n  \"role\": \"Customer\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Customer-2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = pm.response.json();\r",
													"\r",
													"if (jsonData && jsonData.user) {\r",
													"\r",
													"    let userId = jsonData.user.id;\r",
													"    let userPhone_number = jsonData.user.phone_number;\r",
													"\r",
													"    pm.collectionVariables.set(\"Cus-2_userId\", userId);\r",
													"    pm.collectionVariables.set(\"Cus-2_phoneNumber\", userPhone_number);\r",
													"\r",
													"    //pm.environment.set(\"phoneNumber\", userPhone_number);\r",
													"    //pm.environment.set(\"userId\", userId);\r",
													"\r",
													"}\r",
													"\r",
													"pm.test(\"Check new user is created\", function () {\r",
													"    pm.expect(jsonData.message).includes(\"User created\");\r",
													"});\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"let randomId=_.random(100000,999999)\r",
													"let prefix=\"01301\";\r",
													"let phoneNumber=prefix+randomId;\r",
													"console.log(phoneNumber);\r",
													"\r",
													"pm.collectionVariables.set(\"Cus-2_phoneNumber\",phoneNumber)\r",
													"//pm.environment.set(\"phoneNumber\",phoneNumber)"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Secret-Key",
												"value": "{{partnerkey}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"1234\",\r\n  \"phone_number\": \"{{Cus-2_phoneNumber}}\",\r\n  \"nid\": \"123456789\",\r\n  \"role\": \"Customer\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Duplicate customer-1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Check if same user can signup multiple times\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"User already exists\");\r",
													"});\r",
													"pm.test(\"Status code is 208\", function () {\r",
													"    pm.response.to.have.status(208);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "X-AUTH-SECRET-KEY",
												"value": "ROADTOSDET",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"id\": 11471,\r\n        \"name\": \"Jody Gerlach\",\r\n        \"email\": \"Destany_Volkman79@gmail.com\",\r\n        \"password\": \"1234\",\r\n        \"phone_number\": \"01301106032\",\r\n        \"nid\": \"123456789\",\r\n        \"role\": \"Customer\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"create"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Create Merchant",
							"item": [
								{
									"name": "Create Merchant",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = pm.response.json();\r",
													"\r",
													"if (jsonData && jsonData.user) {\r",
													"\r",
													"    let userId = jsonData.user.id;\r",
													"    let userPhone_number = jsonData.user.phone_number;\r",
													"\r",
													"    pm.collectionVariables.set(\"Merchant_userId\", userId);\r",
													"    pm.collectionVariables.set(\"Merchant_phoneNumber\", userPhone_number);\r",
													"\r",
													"    //pm.environment.set(\"phoneNumber\", userPhone_number);\r",
													"    //pm.environment.set(\"userId\", userId);\r",
													"\r",
													"}\r",
													"pm.test(\"Check new user is created\", function () {\r",
													"    pm.expect(jsonData.message).includes(\"User created\");\r",
													"});\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"let randomId=_.random(100000,999999)\r",
													"let prefix=\"01301\";\r",
													"let phoneNumber=prefix+randomId;\r",
													"console.log(phoneNumber);\r",
													"\r",
													"pm.collectionVariables.set(\"Merchant_phoneNumber\",phoneNumber)\r",
													"//pm.environment.set(\"phoneNumber\",phoneNumber)"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "X-Auth-Secret-Key",
												"value": "{{partnerkey}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"1234\",\r\n  \"phone_number\": \"{{Merchant_phoneNumber}}\",\r\n  \"nid\": \"123456789\",\r\n  \"role\": \"Merchant\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Merchant duplicate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Check if same user can signup multiple times\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"User already exists\");\r",
													"});\r",
													"pm.test(\"Status code is 208\", function () {\r",
													"    pm.response.to.have.status(208);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "X-AUTH-SECRET-KEY",
												"value": "ROADTOSDET",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"id\": 11472,\r\n        \"name\": \"Gloria Heidenreich\",\r\n        \"email\": \"Alycia_Price@gmail.com\",\r\n        \"password\": \"1234\",\r\n        \"phone_number\": \"01301348215\",\r\n        \"nid\": \"123456789\",\r\n        \"role\": \"Merchant\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"create"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "User List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Check if message is 'User list'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User list\");  \r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/list",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if user is found by search id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).equals(\"User found\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/search/id/11089",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"search",
								"id",
								"11089"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search user with invalid id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if user is not found by search id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"User not found\");\r",
									"});\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/search/id/1108",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"search",
								"id",
								"1108"
							]
						}
					},
					"response": []
				},
				{
					"name": "Transaction List",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/list",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"list"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "System account",
			"item": [
				{
					"name": "Login System Acc",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData= pm.response.json();\r",
									"let token= jsonData.token;\r",
									"pm.environment.set(\"token\", token)\r",
									"\r",
									"pm.test(\"Check if login is successful\",()=>{\r",
									"    pm.expect(jsonData.message).includes(\"Login successful\")\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "System-Token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGlmaWVyIjoic3lzdGVtQHJvYWR0b2NhcmVlci5uZXQiLCJyb2xlIjoiQWdlbnQiLCJpYXQiOjE3MjU0NDM2NjIsImV4cCI6MTcyNTQ0NzI2Mn0.b5FwtdPPHPdTBrt9vzIaK5hLPl5aqe13VUnGLQm-P0U",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"system@roadtocareer.net\",\r\n    \"password\":\"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposit Agent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData= pm.response.json();\r",
									" pm.test(\"Check if Deposit successful\",()=>{\r",
									"    pm.expect(jsonData.message).includes(\"Deposit successful\")\r",
									" });\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{system-Token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{   \"from_account\": \"SYSTEM\" ,\r\n    \"to_account\": \"01301804876\",\r\n    \"amount\": 100\r\n}\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/deposit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "maximum deposit amount is 10 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData= pm.response.json();\r",
									"\r",
									"\r",
									"pm.test(\"Validate message for deposit limits\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Minimum deposit amount is 10 tk and maximum deposit amount is 10000 tk\");  // Validate the exact message\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{system-Token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{   \"from_account\": \"SYSTEM\" ,\r\n    \"to_account\": \"01301804876\",\r\n    \"amount\": 11000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/deposit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Agent",
			"item": [
				{
					"name": "Login Agent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData= pm.response.json();\r",
									"let token= jsonData.token;\r",
									"pm.environment.set(\"token\", token)\r",
									"\r",
									"pm.test(\"Check if login is successful\",()=>{\r",
									"    pm.expect(jsonData.message).includes(\"Login successful\")\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"email\": \"Clementina_Ankunding15@hotmail.com\",\r\n \"password\": \"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposit Customer-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData= pm.response.json();\r",
									"\r",
									"pm.test(\"Check if Deposit successful\",()=>{\r",
									"    pm.expect(jsonData.message).includes(\"Deposit successful\")\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);  // Check if the status code is 201 Created\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Agent-Token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGlmaWVyIjoiQ2xlbWVudGluYV9Bbmt1bmRpbmcxNUBob3RtYWlsLmNvbSIsInJvbGUiOiJBZ2VudCIsImlhdCI6MTcyNTQ0OTExOSwiZXhwIjoxNzI1NDUyNzE5fQ.t2sEsNGXt1ruRgbxMIAhNNeE9jC0tH87zso-Y_8UPKk",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{   \"from_account\": \"01301804876\" ,\r\n    \"to_account\": \"01301645088\",\r\n    \"amount\": 10\r\n    }\r\n\r\n    ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/deposit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposit Customer-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData= pm.response.json();\r",
									"\r",
									"pm.test(\"Check if Deposit is successful\",()=>{\r",
									"    pm.expect(jsonData.message).includes(\"Deposit successful\")\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Agent-Token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGlmaWVyIjoiQ2xlbWVudGluYV9Bbmt1bmRpbmcxNUBob3RtYWlsLmNvbSIsInJvbGUiOiJBZ2VudCIsImlhdCI6MTcyNTQ0OTExOSwiZXhwIjoxNzI1NDUyNzE5fQ.t2sEsNGXt1ruRgbxMIAhNNeE9jC0tH87zso-Y_8UPKk",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{   \"from_account\": \"01301804876\" ,\r\n    \"to_account\": \"01301665849\",\r\n    \"amount\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/deposit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposit Customer-1 more than balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData= pm.response.json();\r",
									"\r",
									"pm.test(\"Check if Balance is Insufficient\",()=>{\r",
									"    pm.expect(jsonData.message).includes(\"Insufficient balance\")\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Agent-Token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGlmaWVyIjoiQ2xlbWVudGluYV9Bbmt1bmRpbmcxNUBob3RtYWlsLmNvbSIsInJvbGUiOiJBZ2VudCIsImlhdCI6MTcyNTQ0OTExOSwiZXhwIjoxNzI1NDUyNzE5fQ.t2sEsNGXt1ruRgbxMIAhNNeE9jC0tH87zso-Y_8UPKk",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{   \"from_account\": \"01301804876\" ,\r\n    \"to_account\": \"01301439055\",\r\n    \"amount\": 100000\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/deposit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Agent Balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if message is 'User balance'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User balance\");  \r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Agent-Token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGlmaWVyIjoiQ2xlbWVudGluYV9Bbmt1bmRpbmcxNUBob3RtYWlsLmNvbSIsInJvbGUiOiJBZ2VudCIsImlhdCI6MTcyNTQ0OTExOSwiZXhwIjoxNzI1NDUyNzE5fQ.t2sEsNGXt1ruRgbxMIAhNNeE9jC0tH87zso-Y_8UPKk",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/balance/{{Agent account}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"balance",
								"{{Agent account}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid Agent's balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if message is 'User not found'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User not found\");  \r",
									"});\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Agent-Token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGlmaWVyIjoiQ2xlbWVudGluYV9Bbmt1bmRpbmcxNUBob3RtYWlsLmNvbSIsInJvbGUiOiJBZ2VudCIsImlhdCI6MTcyNTQ0OTExOSwiZXhwIjoxNzI1NDUyNzE5fQ.t2sEsNGXt1ruRgbxMIAhNNeE9jC0tH87zso-Y_8UPKk",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/balance/01301822410",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"balance",
								"01301822410"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Customer-1",
			"item": [
				{
					"name": "Login Customer-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData= pm.response.json();\r",
									"let token= jsonData.token;\r",
									"pm.environment.set(\"token\", token)\r",
									"\r",
									"pm.test(\"Check if login is successful\",()=>{\r",
									"    pm.expect(jsonData.message).includes(\"Login successful\")\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Cydney.Cronin36@yahoo.com\",\r\n    \"password\": \"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Successful Send money to Customer-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData= pm.response.json();\r",
									" pm.test(\"Check if Send money successful\",()=>{\r",
									"    pm.expect(jsonData.message).includes(\"Send money successful\")\r",
									" });\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);  \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Customer1-Token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGlmaWVyIjoiQ3lkbmV5LkNyb25pbjM2QHlhaG9vLmNvbSIsInJvbGUiOiJDdXN0b21lciIsImlhdCI6MTcyNTQ3MTI0NCwiZXhwIjoxNzI1NDc0ODQ0fQ.7TSXFPjDkasB5qa2qQNARFuwcspjxvcLpVzKRjFNf-E",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"from_account\": \"01301645088\" ,\r\n    \"to_account\": \"01301665849\",\r\n    \"amount\": 10\r\n\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/sendmoney",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"sendmoney"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative Send money to Customer-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData= pm.response.json();\r",
									" pm.test(\"Check if balance is Insufficient\",()=>{\r",
									"    pm.expect(jsonData.message).includes(\"Insufficient \")\r",
									" });\r",
									"\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);  \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Customer1-Token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGlmaWVyIjoiQ3lkbmV5LkNyb25pbjM2QHlhaG9vLmNvbSIsInJvbGUiOiJDdXN0b21lciIsImlhdCI6MTcyNTQ3MTI0NCwiZXhwIjoxNzI1NDc0ODQ0fQ.7TSXFPjDkasB5qa2qQNARFuwcspjxvcLpVzKRjFNf-E",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"from_account\": \"01301645088\" ,\r\n    \"to_account\": \"01301665849\",\r\n    \"amount\": 11000\r\n\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/sendmoney",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"sendmoney"
							]
						}
					},
					"response": []
				},
				{
					"name": "Balance Customer-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if message is 'User balance'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User balance\");  \r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							},
							{
								"key": "Customer-1-Token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGlmaWVyIjoiQ3lkbmV5LkNyb25pbjM2QHlhaG9vLmNvbSIsInJvbGUiOiJDdXN0b21lciIsImlhdCI6MTcyNTUxOTgzMCwiZXhwIjoxNzI1NTIzNDMwfQ.sdJ9_YHt8TWXOG4EvXGjAj-wdrGDNL6wmYA1vAWxCU0",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transaction/balance/{{cus-1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"balance",
								"{{cus-1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Transaction statement by trnxId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if message is 'Transaction list'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Transaction list\");  \r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							},
							{
								"key": "Custome1-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGlmaWVyIjoiQ3lkbmV5LkNyb25pbjM2QHlhaG9vLmNvbSIsInJvbGUiOiJDdXN0b21lciIsImlhdCI6MTcyNTQ3NTM0OSwiZXhwIjoxNzI1NDc4OTQ5fQ.JUpbVeppPC7k1Truo_Syq2iM7aSw4cngYHk3mOdAQM8",
								"type": "text"
							},
							{
								"key": "trnxId",
								"value": "TXN114635",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/search/TXN580503",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"search",
								"TXN580503"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Customer-2",
			"item": [
				{
					"name": "Login Customer-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData= pm.response.json();\r",
									"let token= jsonData.token;\r",
									"pm.environment.set(\"token\", token)\r",
									"\r",
									"pm.test(\"Check if login is successful\",()=>{\r",
									"    pm.expect(jsonData.message).includes(\"Login successful\")\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Lorenza_Abernathy10@gmail.com\",\r\n        \"password\": \"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Withdraw to Agent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData= pm.response.json();\r",
									" pm.test(\"Check if Withdraw successful\",()=>{\r",
									"    pm.expect(jsonData.message).includes(\"Withdraw successful\")\r",
									" });\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);  \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							},
							{
								"key": "Customer-2-Token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGlmaWVyIjoiTG9yZW56YV9BYmVybmF0aHkxMEBnbWFpbC5jb20iLCJyb2xlIjoiQ3VzdG9tZXIiLCJpYXQiOjE3MjU1MjE3NzYsImV4cCI6MTcyNTUyNTM3Nn0.YnCSWtWMqcI3kqFLLdmjBdyPs2GrEJ-bAE8dLOZ-X0Y",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"from_account\": \"01301665849\",\r\n  \"to_account\": \"01301804876\",\r\n  \"amount\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/withdraw",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "Withdraw to Agent more than balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData= pm.response.json();\r",
									" pm.test(\"Check if balance is Insufficient\",()=>{\r",
									"    pm.expect(jsonData.message).includes(\"Insufficient \")\r",
									" });\r",
									"\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);  \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							},
							{
								"key": "Customer-2-Token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGlmaWVyIjoiTG9yZW56YV9BYmVybmF0aHkxMEBnbWFpbC5jb20iLCJyb2xlIjoiQ3VzdG9tZXIiLCJpYXQiOjE3MjU1MjE3NzYsImV4cCI6MTcyNTUyNTM3Nn0.YnCSWtWMqcI3kqFLLdmjBdyPs2GrEJ-bAE8dLOZ-X0Y",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"from_account\": \"01301665849\",\r\n  \"to_account\": \"01301804876\",\r\n  \"amount\": 20000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/withdraw",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "Balance customer-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if message is 'User balance'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User balance\");  \r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							},
							{
								"key": "Customer-2-Token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGlmaWVyIjoiTG9yZW56YV9BYmVybmF0aHkxMEBnbWFpbC5jb20iLCJyb2xlIjoiQ3VzdG9tZXIiLCJpYXQiOjE3MjU1MjA1MTAsImV4cCI6MTcyNTUyNDExMH0.Qc3yjtvd4qo-gUnHIkjIcV47Q_KOTBLGFBIUycWT8oQ",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transaction/balance/{{Customer-2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"balance",
								"{{Customer-2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid Balance customer-2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if message is 'User not found'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User not found\");  \r",
									"});\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							},
							{
								"key": "Customer-2-Token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGlmaWVyIjoiTG9yZW56YV9BYmVybmF0aHkxMEBnbWFpbC5jb20iLCJyb2xlIjoiQ3VzdG9tZXIiLCJpYXQiOjE3MjU1MjA1MTAsImV4cCI6MTcyNTUyNDExMH0.Qc3yjtvd4qo-gUnHIkjIcV47Q_KOTBLGFBIUycWT8oQ",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transaction/balance/01301665840",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"balance",
								"01301665840"
							]
						}
					},
					"response": []
				},
				{
					"name": "Transaction Statement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if message is 'Transaction list'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Transaction list\");  \r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Custome2-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGlmaWVyIjoiTG9yZW56YV9BYmVybmF0aHkxMEBnbWFpbC5jb20iLCJyb2xlIjoiQ3VzdG9tZXIiLCJpYXQiOjE3MjU1MjA3MzksImV4cCI6MTcyNTUyNDMzOX0.rp5YkEMV5y0LQ3_qY3zEG0rmGVBuKkrtMY_GSbtdce0",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transaction/statement/01301665849",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"statement",
								"01301665849"
							]
						}
					},
					"response": []
				},
				{
					"name": "Payment  to Merchant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validate payment success message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Payment successful\");  // Validate the message \"Payment successful\"\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);  \r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "customer-2-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGlmaWVyIjoiTG9yZW56YV9BYmVybmF0aHkxMEBnbWFpbC5jb20iLCJyb2xlIjoiQ3VzdG9tZXIiLCJpYXQiOjE3MjU1MjEwMTUsImV4cCI6MTcyNTUyNDYxNX0.pxORDFlvnJgNio1xewIX0J3foCOA4YaWm8s1CZ3JrvM",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"from_account\": \"01301665849\",\r\n  \"to_account\": \"01301415557\",\r\n  \"amount\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/payment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"payment"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Merchant",
			"item": [
				{
					"name": "Login Merchant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData= pm.response.json();\r",
									"let token= jsonData.token;\r",
									"\r",
									"\r",
									"pm.test(\"Check if login is successful\",()=>{\r",
									"    pm.expect(jsonData.message).includes(\"Login successful\")\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"Maximilian.Goyette20@hotmail.com\",\r\n        \"password\": \"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merchant Balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if message is 'User balance'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User balance\");  \r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Merchant-Token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGlmaWVyIjoiTWF4aW1pbGlhbi5Hb3lldHRlMjBAaG90bWFpbC5jb20iLCJyb2xlIjoiTWVyY2hhbnQiLCJpYXQiOjE3MjU1MjE0NTAsImV4cCI6MTcyNTUyNTA1MH0.WKeAUmKVZYoJYn-HysaXJ348C8ULIdCTFqxWTSJ6RGQ",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transaction/balance/{{Merchant}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"balance",
								"{{Merchant}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merchant Balance with invalid account number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if message is 'User not found'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User not found\");  \r",
									"});\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Merchant-Token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGlmaWVyIjoiTWF4aW1pbGlhbi5Hb3lldHRlMjBAaG90bWFpbC5jb20iLCJyb2xlIjoiTWVyY2hhbnQiLCJpYXQiOjE3MjU1MjE0NTAsImV4cCI6MTcyNTUyNTA1MH0.WKeAUmKVZYoJYn-HysaXJ348C8ULIdCTFqxWTSJ6RGQ",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transaction/balance/01301415550000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"balance",
								"01301415550000"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "system-Token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGlmaWVyIjoic3lzdGVtQHJvYWR0b2NhcmVlci5uZXQiLCJyb2xlIjoiQWdlbnQiLCJpYXQiOjE3MjU0NDM2NjIsImV4cCI6MTcyNTQ0NzI2Mn0.b5FwtdPPHPdTBrt9vzIaK5hLPl5aqe13VUnGLQm-P0U"
		},
		{
			"key": "trnxId",
			"value": "TXN114635"
		},
		{
			"key": "partnerkey",
			"value": "ROADTOSDET"
		},
		{
			"key": "Customer-1",
			"value": "01301439055"
		},
		{
			"key": "Customer-2",
			"value": "01301665849"
		},
		{
			"key": "Agent",
			"value": "01301822413"
		},
		{
			"key": "Merchant",
			"value": "01301415557"
		},
		{
			"key": "Agent account",
			"value": "01301804876"
		},
		{
			"key": "cus-1",
			"value": "01301645088"
		},
		{
			"key": "Col_Agent_phoneNumber",
			"value": "01301355145"
		},
		{
			"key": "Col_Agent_Email",
			"value": "Virgie18@yahoo.com"
		},
		{
			"key": "Cus-1_phoneNumber",
			"value": "01301542150"
		},
		{
			"key": "Cus-1_userId",
			"value": 12077
		},
		{
			"key": "Cus-2_phoneNumber",
			"value": "01301855193"
		},
		{
			"key": "Cus-2_userId",
			"value": 12078
		},
		{
			"key": "Merchant_phoneNumber",
			"value": "01301732932"
		},
		{
			"key": "Merchant_userId",
			"value": 12079
		},
		{
			"key": "Col_Agent_userId",
			"value": 12076
		}
	]
}